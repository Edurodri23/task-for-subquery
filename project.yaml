specVersion: 1.0.0
name: test
version: 1.0.0
runner:
  node:
    name: "@subql/node"
    version: "*"
  query:
    name: "@subql/query"
    version: "*"
description: >-
  A basic Frontier EVM example project with an event and call
  handler. Read more about this at
  https://university.subquery.network/create/frontier/. This project can be use
  as a starting point for developing your SubQuery project
repository: "https://github.com/subquery/subql-starter"
schema:
  file: ./schema.graphql
network:
  chainId: "0x9eb76c5184c4ab8679d2d5d819fdf90b9c001403e9e17da2e14b6d8aec4029c6"
  endpoint: "wss://astar.api.onfinality.io/public-ws"
  dictionary: "https://api.subquery.network/sq/subquery/astar-dictionary"
  chaintypes:
    file: ./dist/chaintypes.js
dataSources:
  - kind: substrate/FrontierEvm
    startBlock: 970733
    processor:
      file: ./node_modules/@subql/frontier-evm-processor/dist/bundle.js
      options:
        abi: erc20
    assets:
      erc20:
        file: ./erc20.abi.json
    mapping:
      file: ./dist/index.js
      handlers:
        - handler: handleEvmEvent
          kind: substrate/FrontierEvmEvent
          filter:
            topics:
              - "Transfer(address, address,uint256)"
              - null
              - null
              - null
        - handler: handleEvmCall
          kind: substrate/FrontierEvmCall
          filter:
            function: "approve(address to,uint256 value)"
            #from: "0x6bd193ee6d2104f14f94e2ca6efefae561a4334b"
